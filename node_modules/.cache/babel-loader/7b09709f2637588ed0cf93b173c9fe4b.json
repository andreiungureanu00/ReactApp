{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/andrei/Teste Interviu/FrontEnd Internship/frontend_internship/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\nconst Popup = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close-icon\",\n        onClick: props.handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), props.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Popup;\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [objectID, setID] = useState(null);\n  const fetchUrl = \"https://my-json-server.typicode.com/Codeinwp/front-end-internship-api/posts\";\n\n  const getData = () => fetch(`${fetchUrl}`).then(res => res.json());\n\n  useEffect(() => {\n    getData().then(data => setData(data));\n  }, []);\n\n  const togglePopup = id => {\n    setIsOpen(!isOpen);\n    setID(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [isOpen && /*#__PURE__*/_jsxDEV(Popup, {\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: data === null || data === void 0 ? void 0 : data.map(item => {\n          if (item.id == objectID) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"popup_cell\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.thumbnail.large\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"object_content\",\n                children: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [item.author.avatar ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"avatar\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: item.author.avatar\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"empty\",\n                  children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"avatar\",\n                  children: [item.author.name, \" + \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"avatar\",\n                  children: item.author.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this),\n      handleClose: togglePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container1\",\n      children: data === null || data === void 0 ? void 0 : data.map((item, i) => {\n        if (i % 2 == 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main_cell\",\n            onClick: () => togglePopup(item.id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.thumbnail.small\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"object_content\",\n              children: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [item.author.avatar ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.author.avatar\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty\",\n                children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: item.author.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"avatar\",\n                children: item.author.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container2\",\n      children: data === null || data === void 0 ? void 0 : data.map((item, i) => {\n        if (i % 2 == 1) return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main_cell\",\n          onClick: () => togglePopup(item.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.thumbnail.small\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"object_content\",\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [item.author.avatar ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.author.avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty\",\n              children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: item.author.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: item.author.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ykKbVlQKKywCF27pFYFXZ/2/bEg=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Popup\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/andrei/Teste Interviu/FrontEnd Internship/frontend_internship/src/App.js"],"names":["useState","useEffect","Popup","props","handleClose","content","App","data","setData","isOpen","setIsOpen","objectID","setID","fetchUrl","getData","fetch","then","res","json","togglePopup","id","map","item","thumbnail","large","title","author","avatar","name","role","i","small"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\nconst Popup = (props) => {\n  return (\n    <div className=\"popup-box\">\n      <div className=\"box\">\n        <span className=\"close-icon\" onClick={props.handleClose}>\n          Close\n        </span>\n        {props.content}\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [objectID, setID] = useState(null);\n\n  const fetchUrl =\n    \"https://my-json-server.typicode.com/Codeinwp/front-end-internship-api/posts\";\n  const getData = () => fetch(`${fetchUrl}`).then((res) => res.json());\n\n  useEffect(() => {\n    getData().then((data) => setData(data));\n  }, []);\n\n  const togglePopup = (id) => {\n    setIsOpen(!isOpen);\n    setID(id);\n  };\n\n  return (\n    <div className=\"row\">\n      {isOpen && (\n        <Popup\n          content={\n            <div>\n              {data?.map((item) => {\n                if (item.id == objectID) {\n                  return (\n                    <div className=\"popup_cell\">\n                      <img src={item.thumbnail.large} />\n                      <h2>{item.title}</h2>\n                      <br></br>\n                      <div className=\"object_content\">{item.content}</div>\n                      <br></br>\n                      <div className=\"row\">\n                        {item.author.avatar ? (\n                          <div className=\"avatar\">\n                            <img src={item.author.avatar} />\n                          </div>\n                        ) : (\n                          <div className=\"empty\">\n                            <br></br>\n                          </div>\n                        )}\n                        <div className=\"avatar\">{item.author.name} + </div>\n                        <div className=\"avatar\">{item.author.role}</div>\n                      </div>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          }\n          handleClose={togglePopup}\n        />\n      )}\n      <div className=\"container1\">\n        {data?.map((item, i) => {\n          if (i % 2 == 0) {\n            return (\n              <div className=\"main_cell\" onClick={() => togglePopup(item.id)}>\n                <img src={item.thumbnail.small} />\n                <h2>{item.title}</h2>\n                <div className=\"object_content\">{item.content}</div>\n                <br></br>\n                <div className=\"row\">\n                  {item.author.avatar ? (\n                    <div className=\"avatar\">\n                      <img src={item.author.avatar} />\n                    </div>\n                  ) : (\n                    <div className=\"empty\">\n                      <br></br>\n                    </div>\n                  )}\n                  <div className=\"avatar\">{item.author.name}</div>\n                  <div className=\"avatar\">{item.author.role}</div>\n                </div>\n              </div>\n            );\n          }\n        })}\n      </div>\n      <div className=\"container2\">\n        {data?.map((item, i) => {\n          if (i % 2 == 1)\n            return (\n              <div className=\"main_cell\" onClick={() => togglePopup(item.id)}>\n                <img src={item.thumbnail.small} />\n                <h2>{item.title}</h2>\n                <div className=\"object_content\">{item.content}</div>\n                <br></br>\n                <div className=\"row\">\n                  {item.author.avatar ? (\n                    <div className=\"avatar\">\n                      <img src={item.author.avatar} />\n                    </div>\n                  ) : (\n                    <div className=\"empty\">\n                      <br></br>\n                    </div>\n                  )}\n                  <div className=\"avatar\">{item.author.name}</div>\n                  <div className=\"avatar\">{item.author.role}</div>\n                </div>\n              </div>\n            );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}